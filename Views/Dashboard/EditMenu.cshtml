@model LMU_EBurger.Models.Menu

@{
    ViewBag.Title = "EditMenu";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="content-wrapper">
    <div class="container-fluid">
        <!-- Breadcrumbs-->
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a href="/Dashboard">Dashboard</a>
            </li>
            <li class="breadcrumb-item active">New Menu Item</li>
        </ol>

        <div class="box_general padding_bottom">
            <div class="header_box version_2">
                <h2><i class="fa fa-filter"></i>Menu Item</h2>
            </div>

            @using (Html.BeginForm("EditMenu", "Dashboard", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="row">
                    <div class="col">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Name, "Menu Item Name")
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Lounge Burger" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <!-- /row-->

                <div class="row">
                    <div class="col">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Description, "Menu Item Description")
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @placeholder = "Menu Item description..." } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <!-- /row-->

                <div class="row">
                    <div class="col">
                        <div class="form-group">
                            <div class="custom-file">
                                <input type="file" class="custom-file-input" name="ImageFile" id="ImageFile">
                                <label class="custom-file-label" for="ImageFile">Select Image File</label>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- /row-->

                <div class="row">
                    <div class="col">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Price, "Menu Item Price")
                            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = "150", @step = "10" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Availability, "Menu Avaliability")
                            @Html.DropDownListFor(model => model.Availability, new List<SelectListItem> {
                                new SelectListItem {Text = "Availabale", Value = "true", Selected=true},
                                new SelectListItem {Text = "Out of Service", Value = "false"}
                            }, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Availability, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <!-- /row-->


                <div class="row">
                    <div class="col">
                        <div class="form-group">
                            @Html.LabelFor(model => model.PrepTime, "Menu Prep Time")
                            @Html.EditorFor(model => model.PrepTime, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PrepTime, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col">
                        <div class="form-group">
                            @Html.LabelFor(model => model.CategoryID, "Menu Category")
                            @Html.DropDownListFor(model => model.CategoryID, (IEnumerable<SelectListItem>)ViewBag.categorylistname as SelectList, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <!-- /row-->

                <div class="row">
                    <div class="col">
                        <input type="submit" value="Save Category" class="btn_1 medium" />
                    </div>
                </div>
            }

        </div>
    </div>
    <!-- /.container-fluid-->
</div>

<!-- Custom scripts for this page-->
@section Scripts {
    <!-- WYSIWYG Editor -->
    @Scripts.Render("~/Content/AdminDashboard/vendor/dropzone.min.js");
    @Scripts.Render("~/Scripts/AdminDashboard/js/editor/summernote-bs4.min.js");

    <script type="text/javascript">
        $('.editor').summernote({
            fontSizes: ['10', '14'],
            toolbar: [
                // [groupName, [list of button]]
                ['style', ['bold', 'italic', 'underline', 'clear']],
                ['font', ['strikethrough']],
                ['fontsize', ['fontsize']],
                ['para', ['ul', 'ol', 'paragraph']]
            ],
            placeholder: 'Enter your category description here....',
            tabsize: 2,
            height: 200
        });
    </script>
}
